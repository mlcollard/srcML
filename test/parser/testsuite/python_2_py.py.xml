<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" language="Python" url="python_2">

<unit revision="1.0.0" language="Python">
<exec>exec <expr><literal type="string">"x = 4"</literal></expr></exec>
</unit>

<unit revision="1.0.0" language="Python">
<expr_stmt><expr><call><name>exec</name><argument_list>(<argument><expr><literal type="string">"x = 4"</literal></expr></argument>)</argument_list></call></expr></expr_stmt>
</unit>

<unit revision="1.0.0" language="Python">
<expr_stmt><expr><call><name>exec</name> <argument_list>(<argument><expr><literal type="string">"x = 4"</literal></expr></argument>)</argument_list></call></expr></expr_stmt>
</unit>

<unit revision="1.0.0" language="Python">
<print>print <expr><literal type="string">"Hello World"</literal></expr></print>
</unit>

<unit revision="1.0.0" language="Python">
<expr_stmt><expr><call><name>print</name><argument_list>(<argument><expr><literal type="string">"Hello World"</literal></expr></argument>)</argument_list></call></expr></expr_stmt>
</unit>

<unit revision="1.0.0" language="Python">
<expr_stmt><expr><call><name>print</name> <argument_list>(<argument><expr><literal type="string">"Hello World"</literal></expr></argument>)</argument_list></call></expr></expr_stmt>
</unit>

<unit revision="1.0.0" language="Python">
<class>class <name>Sample</name><super_list>()</super_list><block>:<block_content>
    <function>def <name>example</name><parameter_list>(<parameter><name>self</name></parameter>)</parameter_list><block>:<block_content>
        <print>print <expr><tuple><expr><literal type="string">"A"</literal></expr>, <expr><name>a</name></expr>, <expr><literal type="string">"B"</literal></expr>, <expr><name>b</name></expr>, <expr><literal type="string">"."</literal></expr>,</tuple></expr></print> \
</block_content></block></function></block_content></block></class>

<expr_stmt><expr><name>c</name> <operator>=</operator> <literal type="number">0</literal></expr></expr_stmt>
</unit>

<unit revision="1.0.0" language="Python">
<try>try<block>:<block_content>
    <expr_stmt><expr><literal type="number">1</literal><operator>/</operator><literal type="number">0</literal></expr></expr_stmt>
</block_content></block><catch>except <alias><expr><name>ZeroDivisionError</name></expr>, <name>e</name></alias><block>:<block_content>
    <print>print <expr><name>e</name></expr></print>
</block_content></block></catch></try>
</unit>

<unit revision="1.0.0" language="Python">
<try>try<block>:<block_content>
    <expr_stmt><expr><literal type="number">1</literal><operator>/</operator><literal type="number">0</literal></expr></expr_stmt>
</block_content></block><catch>except <alias><expr><tuple>(<expr><name>ZeroDivisionError</name></expr>, <expr><name>ValueError</name></expr>, <expr><name>TypeError</name></expr>)</tuple></expr>, <name>e</name></alias><block>:<block_content>
    <print>print <expr><name>e</name></expr></print>
</block_content></block></catch></try>
</unit>

<unit revision="1.0.0" language="Python">
<try>try<block>:<block_content>
    <expr_stmt><expr><literal type="number">1</literal><operator>/</operator><literal type="number">0</literal></expr></expr_stmt>
</block_content></block><catch>except <alias><expr><operator>(</operator><name>ZeroDivisionError</name><operator>)</operator></expr>, <operator>(</operator><name>e</name><operator>)</operator></alias><block>:<block_content>
    <print>print <expr><name>e</name></expr></print>
</block_content></block></catch></try>
</unit>

<unit revision="1.0.0" language="Python">
<expr_stmt><expr><literal type="string">ur"a"</literal></expr></expr_stmt>
</unit>

<unit revision="1.0.0" language="Python">
<expr_stmt><expr><literal type="string">UR"a"</literal></expr></expr_stmt>
</unit>

<unit revision="1.0.0" language="Python">
<expr_stmt><expr><literal type="string">Ur"a"</literal></expr></expr_stmt>
</unit>

<unit revision="1.0.0" language="Python">
<expr_stmt><expr><literal type="string">uR"a"</literal></expr></expr_stmt>
</unit>

</unit>
