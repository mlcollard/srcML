<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" language="Python" url="yield">

<unit language="Python">
<function>def <name>generator</name><argument_list>()</argument_list><block>:<block_content>
    <yield>yield</yield></block_content></block></function>
</unit>

<unit language="Python">
<function>def <name>generator</name><argument_list>()</argument_list><block>:<block_content>
    <yield>yield <expr><literal type="number">1</literal></expr></yield></block_content></block></function>
</unit>

<unit language="Python">
<function>def <name>generator</name><argument_list>()</argument_list><block>:<block_content>
    <yield>yield <expr><literal type="number">1</literal></expr></yield>
    <yield>yield <expr><literal type="number">2</literal></expr></yield></block_content></block></function>
</unit>

<unit language="Python">
<function>def <name>generator</name><argument_list>(<argument><expr><name>x</name></expr></argument>)</argument_list><block>:<block_content>
    <for>for <control><name>i</name> <range>in <expr><call><name>range</name><argument_list>(<argument><expr><name>x</name></expr></argument>)</argument_list></call></expr></range></control><block>:<block_content>
        <yield>yield <expr><name>i</name></expr></yield></block_content></block></for></block_content></block></function>
</unit>

<unit language="Python">
<function>def <name>generator</name><argument_list>(<argument><expr><name>x</name></expr></argument>)</argument_list><block>:<block_content>
    <yield type="from">yield from <expr><call><name>range</name><argument_list>(<argument><expr><name>x</name></expr></argument>)</argument_list></call></expr></yield></block_content></block></function>
</unit>

<unit language="Python">
<function>def <name>generator</name><argument_list>(<argument><expr><name>x</name></expr></argument>)</argument_list><block>:<block_content>
    <if_stmt><if>if <condition><expr><operator>(</operator><yield>yield <expr><name>i</name></expr></yield><operator>)</operator></expr></condition><block>:<block_content>
        <pass>pass</pass></block_content></block></if></if_stmt></block_content></block></function>
</unit>

<unit language="Python">
<function>def <name>generator</name><argument_list>()</argument_list><block>:<block_content>
    <expr_stmt><expr><name>val</name> <operator>=</operator> <yield>yield</yield></expr></expr_stmt></block_content></block></function>
</unit>

<unit language="Python">
<function>def <name>generator</name><argument_list>(<argument><expr><name>x</name></expr></argument>)</argument_list><block>:<block_content>
    <for>for <control><name>i</name> <range>in <expr><call><name>range</name><argument_list>(<argument><expr><name>x</name></expr></argument>)</argument_list></call></expr></range></control><block>:<block_content>
        <expr_stmt><expr><name>val</name> <operator>=</operator> <yield>yield <expr><name>i</name></expr></yield></expr></expr_stmt></block_content></block></for></block_content></block></function>
</unit>

<unit language="Python">
<function>def <name>generator</name><argument_list>(<argument><expr><name>x</name></expr></argument>)</argument_list><block>:<block_content>
    <expr_stmt><expr><name>arr</name> <operator>=</operator> <yield type="from">yield from <expr><call><name>range</name><argument_list>(<argument><expr><name>x</name></expr></argument>)</argument_list></call></expr></yield></expr></expr_stmt></block_content></block></function>
</unit>

</unit>
