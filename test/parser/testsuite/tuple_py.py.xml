<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" language="Python" url="tuple">

<unit revision="1.1.0" language="Python">
<expr_stmt><expr><tuple>()</tuple></expr></expr_stmt>
</unit>

<unit revision="1.1.0" language="Python">
<expr_stmt><expr><tuple>(,)</tuple></expr></expr_stmt>
</unit>

<unit revision="1.1.0" language="Python">
<expr_stmt><expr><tuple>(<expr><literal type="number">1</literal></expr>,)</tuple></expr></expr_stmt>
</unit>

<unit revision="1.1.0" language="Python">
<expr_stmt><expr><tuple>(<expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>)</tuple></expr></expr_stmt>
</unit>

<unit revision="1.1.0" language="Python">
<expr_stmt><expr><tuple>(<expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>,)</tuple></expr></expr_stmt>
</unit>

<unit revision="1.1.0" language="Python">
<expr_stmt><expr><tuple>(<expr><literal type="number">1</literal></expr>,<expr><literal type="number">2</literal></expr>,<expr><literal type="number">3</literal></expr>)</tuple></expr></expr_stmt>
</unit>

<unit revision="1.1.0" language="Python">
<expr_stmt><expr><tuple>(<expr><literal type="number">1</literal></expr>,<expr><literal type="number">2</literal></expr>,<expr><literal type="number">3</literal></expr>,)</tuple></expr></expr_stmt>
</unit>

<unit revision="1.1.0" language="Python">
<expr_stmt><expr><tuple>(<expr><call><name>b</name><argument_list>()</argument_list></call></expr>, <expr><call><name>c</name><argument_list>()</argument_list></call></expr>)</tuple></expr></expr_stmt>
</unit>

<unit revision="1.1.0" language="Python">
<expr_stmt><expr><name>x</name> <operator>=</operator> <tuple>(<expr><literal type="string">"hello"</literal></expr>,<expr><literal type="string">"world"</literal></expr>)</tuple></expr></expr_stmt>
</unit>

<unit revision="1.1.0" language="Python">
<expr_stmt><expr><tuple>(<expr><tuple>()</tuple></expr>,<expr><tuple>()</tuple></expr>)</tuple></expr></expr_stmt>
</unit>

<unit revision="1.1.0" language="Python">
<expr_stmt><expr><tuple>(<expr><operator>(</operator><name>d</name><operator>)</operator></expr>, <expr><operator>(</operator><name>e</name><operator>)</operator></expr>)</tuple></expr></expr_stmt>
</unit>

<unit revision="1.1.0" language="Python">
<expr_stmt><expr><name>empty</name> <operator>=</operator> <tuple>()</tuple></expr></expr_stmt>
</unit>

<unit revision="1.1.0" language="Python">
<expr_stmt><expr><name>empty</name> <operator>=</operator> <operator>(</operator><tuple>()</tuple><operator>)</operator></expr></expr_stmt>
</unit>

<unit revision="1.1.0" language="Python">
<expr_stmt><expr><name>empty</name> <operator>=</operator> <operator>(</operator><operator>(</operator><tuple>()</tuple><operator>)</operator><operator>)</operator></expr></expr_stmt>
</unit>

<unit revision="1.1.0" language="Python">
<expr_stmt><expr><tuple>(<expr><tuple>(<expr><literal type="number">1</literal></expr>,<expr><literal type="number">2</literal></expr>)</tuple></expr>,<expr><tuple>(<expr><literal type="number">3</literal></expr>,<expr><literal type="number">4</literal></expr>)</tuple></expr>,<expr><tuple>(<expr><literal type="number">5</literal></expr>,<expr><literal type="number">6</literal></expr>)</tuple></expr>)</tuple></expr></expr_stmt>
</unit>

<unit revision="1.1.0" language="Python">
<expr_stmt><expr><name>empty</name> <operator>=</operator> <array>[<expr><tuple>()</tuple></expr>]</array></expr></expr_stmt>
</unit>

<unit revision="1.1.0" language="Python">
<expr_stmt><expr><tuple><expr><literal type="number">1</literal></expr>,</tuple></expr></expr_stmt>
</unit>

<unit revision="1.1.0" language="Python">
<expr_stmt><expr><tuple><expr><literal type="number">1</literal></expr>,<expr><literal type="number">2</literal></expr></tuple></expr></expr_stmt>
</unit>

<unit revision="1.1.0" language="Python">
<expr_stmt><expr><tuple><expr><literal type="number">1</literal></expr>,<expr><literal type="number">2</literal></expr>,</tuple></expr></expr_stmt>
</unit>

<unit revision="1.1.0" language="Python">
<expr_stmt><expr><tuple><expr><name>x</name></expr>, <expr><name>y</name></expr>, <expr><name>z</name></expr></tuple> <operator>=</operator> <tuple><expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr></tuple></expr></expr_stmt>
</unit>

<unit revision="1.1.0" language="Python">
<expr_stmt><expr><tuple><expr><tuple>(<expr><name>a</name></expr>, <expr><name>b</name></expr>)</tuple></expr>,</tuple></expr></expr_stmt>
</unit>

<unit revision="1.1.0" language="Python">
<expr_stmt><expr><tuple><expr><literal type="number">1</literal></expr>,<expr><literal type="number">2</literal></expr>,<expr><tuple>(<expr><literal type="number">3</literal></expr>,<expr><literal type="number">4</literal></expr>)</tuple></expr></tuple></expr></expr_stmt>
</unit>

<unit revision="1.1.0" language="Python">
<expr_stmt><expr><tuple>(<expr><name>a</name></expr>, <expr><name>b</name></expr>, <expr><name>c</name></expr>)</tuple> <operator>=</operator> <tuple>(<expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">6</literal></expr>)</tuple></expr></expr_stmt>
</unit>

<unit revision="1.1.0" language="Python">
<expr_stmt><expr><tuple>(<expr><call><name>a</name><argument_list>(<argument><expr><tuple>(<expr><name>x</name></expr>, <expr><name>y</name></expr>)</tuple></expr></argument>, <argument><expr><name>z</name></expr></argument>)</argument_list></call></expr>, <expr><name>b</name></expr>)</tuple></expr></expr_stmt>
</unit>

<unit revision="1.1.0" language="Python">
<expr_stmt><expr><name>construct</name> <operator>=</operator> <operator>(</operator><operator>(</operator><tuple>(<expr><call><name>a</name><argument_list>()</argument_list></call></expr>, <expr><call><name>b</name><argument_list>()</argument_list></call></expr>)</tuple><operator>)</operator><operator>)</operator></expr></expr_stmt>
</unit>

<unit revision="1.1.0" language="Python">
<expr_stmt><expr><name>construct</name> <operator>=</operator> <operator>(</operator><tuple>(<expr><operator>(</operator><name>a</name><operator>)</operator></expr>, <expr><operator>(</operator><name>b</name><operator>)</operator></expr>, <expr><name>c</name></expr>)</tuple><operator>)</operator></expr></expr_stmt>
</unit>

<unit revision="1.1.0" language="Python">
<function>def <name>keyword_arguments</name><parameter_list>(<parameter><name>a</name></parameter>, <parameter><name>b</name></parameter>, <parameter><name>c</name></parameter>, <parameter><name>d</name></parameter>)</parameter_list><block>:<block_content>
    <return>return <expr><tuple><expr><call><name><name>a</name><operator>.</operator><name>sample</name></name><argument_list>(<argument><expr><name>b</name></expr></argument>, <argument><name>example</name>=<expr><name>c</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>a</name><operator>.</operator><name>sample</name></name><argument_list>(<argument><expr><name>d</name></expr></argument>)</argument_list></call></expr></tuple></expr></return>
</block_content></block></function>
</unit>

<unit revision="1.1.0" language="Python">
<function>def <name>keyword_arguments</name><parameter_list>(<parameter><name>a</name></parameter>, <parameter><name>b</name></parameter>, <parameter><name>c</name></parameter>, <parameter><name>d</name></parameter>, <parameter><name>e</name></parameter>)</parameter_list><block>:<block_content>
    <return>return <expr><tuple><expr><call><name><name>a</name><operator>.</operator><name>sample</name></name><argument_list>(<argument><expr><name>b</name></expr></argument>, <argument><name>example</name>=<expr><name>c</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>a</name><operator>.</operator><name>sample</name></name><argument_list>(<argument><expr><name>d</name></expr></argument>, <argument><name>example</name>=<expr><name>e</name></expr></argument>)</argument_list></call></expr></tuple></expr></return>
</block_content></block></function></unit>
</unit>

</unit>
