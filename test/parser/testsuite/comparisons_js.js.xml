<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="JavaScript" filename="comparisons.js" url="comparisons">

    <!--Unit 1-->
    <unit language="JavaScript">
        <comment type="line">// Loose Equality (==)</comment>
        <expr_stmt><expr><literal type="number">5</literal> <operator>==</operator> <literal type="string">'5'</literal></expr>;</expr_stmt>
    </unit>

    <!--Unit 2-->
    <unit language="JavaScript">
        <expr_stmt><expr><literal type="number">0</literal> <operator>==</operator> <literal type="boolean">false</literal></expr>;</expr_stmt>
    </unit>

    <!--Unit 3-->
    <unit language="JavaScript">
        <expr_stmt><expr><literal type="null">null</literal> <operator>==</operator> <name>undefined</name></expr>;</expr_stmt>
    </unit>

    <!--Unit 4-->
    <unit language="JavaScript">
        <expr_stmt><expr><literal type="string">''</literal> <operator>==</operator> <literal type="boolean">false</literal></expr>;</expr_stmt>
    </unit>

    <!--Unit 5-->
    <unit language="JavaScript">
        <expr_stmt><expr><literal type="string">' \t\r\n '</literal> <operator>==</operator> <literal type="number">0</literal></expr>;</expr_stmt>
    </unit>

    <!--Unit 6-->
    <unit language="JavaScript">
        <expr_stmt><expr><array>[<expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>]</array><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call> <operator>==</operator> <literal type="string">'1,2'</literal></expr>;</expr_stmt>
    </unit>

    <!--Unit 7-->
    <unit language="JavaScript">
        <comment type="line">// Strict Equality (===)</comment>
        <expr_stmt><expr><literal type="number">5</literal> <operator>===</operator> <literal type="string">'5'</literal></expr>;</expr_stmt>
    </unit>

    <!--Unit 8-->
    <unit language="JavaScript">
        <expr_stmt><expr><literal type="number">0</literal> <operator>===</operator> <literal type="boolean">false</literal></expr>;</expr_stmt>
    </unit>

    <!--Unit 9-->
    <unit language="JavaScript">
        <expr_stmt><expr><literal type="null">null</literal> <operator>===</operator> <name>undefined</name></expr>;</expr_stmt>
    </unit>

    <!--Unit 10-->
    <unit language="JavaScript">
        <expr_stmt><expr><literal type="string">''</literal> <operator>===</operator> <literal type="boolean">false</literal></expr>;</expr_stmt>
    </unit>

    <!--Unit 11-->
    <unit language="JavaScript">
        <expr_stmt><expr><literal type="string">'hello'</literal> <operator>===</operator> <literal type="string">'hello'</literal></expr>;</expr_stmt>
    </unit>

    <!--Unit 12-->
    <unit language="JavaScript">
        <expr_stmt><expr><array>[<expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>]</array> <operator>===</operator> <array>[<expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>]</array></expr>;</expr_stmt>
    </unit>

    <!--Unit 13-->
    <unit language="JavaScript">
        <comment type="line">// Loose Inequality (!=)</comment>
        <expr_stmt><expr><literal type="number">5</literal> <operator>!=</operator> <literal type="string">'5'</literal></expr>;</expr_stmt>
    </unit>

    <!--Unit 14-->
    <unit language="JavaScript">
        <expr_stmt><expr><literal type="number">0</literal> <operator>!=</operator> <literal type="boolean">false</literal></expr>;</expr_stmt>
    </unit>

    <!--Unit 15-->
    <unit language="JavaScript">
        <expr_stmt><expr><literal type="null">null</literal> <operator>!=</operator> <name>undefined</name></expr>;</expr_stmt>
    </unit>

    <!--Unit 16-->
    <unit language="JavaScript">
        <expr_stmt><expr><literal type="string">''</literal> <operator>!=</operator> <literal type="boolean">false</literal></expr>;</expr_stmt>
    </unit>

    <!--Unit 17-->
    <unit language="JavaScript">
        <expr_stmt><expr><array>[<expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>]</array><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call> <operator>!=</operator> <literal type="string">'1,2'</literal></expr>;</expr_stmt>
    </unit>

    <!--Unit 18-->
    <unit language="JavaScript">
        <comment type="line">// Strict Inequality (!==)</comment>
        <expr_stmt><expr><literal type="number">5</literal> <operator>!==</operator> <literal type="string">'5'</literal></expr>;</expr_stmt>
    </unit>

    <!--Unit 19-->
    <unit language="JavaScript">
        <expr_stmt><expr><literal type="number">0</literal> <operator>!==</operator> <literal type="boolean">false</literal></expr>;</expr_stmt>
    </unit>

    <!--Unit 20-->
    <unit language="JavaScript">
        <expr_stmt><expr><literal type="null">null</literal> <operator>!==</operator> <name>undefined</name></expr>;</expr_stmt>
    </unit>

    <!--Unit 21-->
    <unit language="JavaScript">
        <expr_stmt><expr><literal type="string">''</literal> <operator>!==</operator> <literal type="boolean">false</literal></expr>;</expr_stmt>
    </unit>

    <!--Unit 22-->
    <unit language="JavaScript">
        <expr_stmt><expr><literal type="string">'hello'</literal> <operator>!==</operator> <literal type="string">'hello'</literal></expr>;</expr_stmt>
    </unit>

    <!--Unit 23-->
    <unit language="JavaScript">
        <expr_stmt><expr><array>[<expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>]</array> <operator>!==</operator> <array>[<expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>]</array></expr>;</expr_stmt>
    </unit>

    <!--Unit 24-->
    <unit language="JavaScript">
        <comment type="line">// Less Than (&lt;)</comment>
        <expr_stmt><expr><literal type="number">3</literal> <operator>&lt;</operator> <literal type="number">5</literal></expr>;</expr_stmt>
    </unit>

    <!--Unit 25-->
    <unit language="JavaScript">
        <expr_stmt><expr><literal type="string">'apple'</literal> <operator>&lt;</operator> <literal type="string">'banana'</literal></expr>;</expr_stmt>
    </unit>

    <!--Unit 26-->
    <unit language="JavaScript">
        <expr_stmt><expr><literal type="string">'2'</literal> <operator>&lt;</operator> <literal type="string">'12'</literal></expr>;</expr_stmt>
    </unit>

    <!--Unit 27-->
    <unit language="JavaScript">
        <expr_stmt><expr><literal type="boolean">true</literal> <operator>&lt;</operator> <literal type="number">2</literal></expr>;</expr_stmt>
    </unit>

    <!--Unit 28-->
    <unit language="JavaScript">
        <comment type="line">// Less Than or Equal To (&lt;=)</comment>
        <expr_stmt><expr><literal type="number">5</literal> <operator>&lt;=</operator> <literal type="number">5</literal></expr>;</expr_stmt>
    </unit>

    <!--Unit 29-->
    <unit language="JavaScript">
        <expr_stmt><expr><literal type="number">4</literal> <operator>&lt;=</operator> <literal type="number">5</literal></expr>;</expr_stmt>
    </unit>

    <!--Unit 30-->
    <unit language="JavaScript">
        <expr_stmt><expr><literal type="string">'apple'</literal> <operator>&lt;=</operator> <literal type="string">'banana'</literal></expr>;</expr_stmt>
    </unit>

    <!--Unit 31-->
    <unit language="JavaScript">
        <expr_stmt><expr><literal type="string">'2'</literal> <operator>&lt;=</operator> <literal type="string">'12'</literal></expr>;</expr_stmt>
    </unit>

    <!--Unit 32-->
    <unit language="JavaScript">
        <comment type="line">// Greater Than (&gt;)</comment>
        <expr_stmt><expr><literal type="number">5</literal> <operator>&gt;</operator> <literal type="number">3</literal></expr>;</expr_stmt>
    </unit>

    <!--Unit 33-->
    <unit language="JavaScript">
        <expr_stmt><expr><literal type="string">'banana'</literal> <operator>&gt;</operator> <literal type="string">'apple'</literal></expr>;</expr_stmt>
    </unit>

    <!--Unit 34-->
    <unit language="JavaScript">
        <expr_stmt><expr><literal type="string">'12'</literal> <operator>&gt;</operator> <literal type="string">'2'</literal></expr>;</expr_stmt>
    </unit>

    <!--Unit 35-->
    <unit language="JavaScript">
        <expr_stmt><expr><literal type="boolean">false</literal> <operator>&gt;</operator> <operator>-</operator><literal type="number">1</literal></expr>;</expr_stmt>
    </unit>

    <!--Unit 36-->
    <unit language="JavaScript">
        <comment type="line">// Greater Than or Equal To (&gt;=)</comment>
        <expr_stmt><expr><literal type="number">5</literal> <operator>&gt;=</operator> <literal type="number">5</literal></expr>;</expr_stmt>
    </unit>

    <!--Unit 37-->
    <unit language="JavaScript">
        <expr_stmt><expr><literal type="number">6</literal> <operator>&gt;=</operator> <literal type="number">5</literal></expr>;</expr_stmt>
    </unit>

    <!--Unit 38-->
    <unit language="JavaScript">
        <expr_stmt><expr><literal type="string">'banana'</literal> <operator>&gt;=</operator> <literal type="string">'apple'</literal></expr>;</expr_stmt>
    </unit>

    <!--Unit 39-->
    <unit language="JavaScript">
        <expr_stmt><expr><literal type="string">'12'</literal> <operator>&gt;=</operator> <literal type="string">'2'</literal></expr>;</expr_stmt>
    </unit>

    <!--Unit 40-->
    <unit language="JavaScript">
        <comment type="line">// 'in' Operator</comment>
        <expr_stmt><expr><literal type="string">'a'</literal> <range>in <expr><object>{<property/><name>a</name>:<expr><literal type="number">1</literal></expr>, <property><name>b</name>:<expr><literal type="number">2</literal></expr></property>}</object></expr></range></expr>;</expr_stmt>
    </unit>

    <!--Unit 41-->
    <unit language="JavaScript">
        <expr_stmt><expr><literal type="string">'c'</literal> <range>in <expr><object>{<property/><name>a</name>:<expr><literal type="number">1</literal></expr>, <property><name>b</name>:<expr><literal type="number">2</literal></expr></property>}</object></expr></range></expr>;</expr_stmt>
    </unit>

    <!--Unit 42-->
    <unit language="JavaScript">
        <expr_stmt><expr><literal type="string">'toString'</literal> <range>in <expr><object>{<property/><name>a</name>:<expr><literal type="number">1</literal></expr>, <property><name>b</name>:<expr><literal type="number">2</literal></expr></property>}</object></expr></range></expr>;</expr_stmt>
    </unit>

    <!--Unit 43-->
    <unit language="JavaScript">
        <expr_stmt><expr><literal type="number">0</literal> <range>in <expr><array>[<expr><literal type="number">10</literal></expr>, <expr><literal type="number">20</literal></expr>, <expr><literal type="number">30</literal></expr>]</array></expr></range></expr>;</expr_stmt>
    </unit>

    <!--Unit 44-->
    <unit language="JavaScript">
        <expr_stmt><expr><literal type="number">3</literal> <range>in <expr><array>[<expr><literal type="number">10</literal></expr>, <expr><literal type="number">20</literal></expr>, <expr><literal type="number">30</literal></expr>]</array></expr></range></expr>;</expr_stmt>
    </unit>

    <!--Unit 45-->
    <unit language="JavaScript">
        <comment type="line">// 'instanceof' Operator</comment>
        <expr_stmt><expr><operator>new</operator> <call><name>Date</name><argument_list>()</argument_list></call> <operator>instanceof</operator> <name>Date</name></expr>;</expr_stmt>
    </unit>

    <!--Unit 46-->
    <unit language="JavaScript">
        <expr_stmt><expr><operator>new</operator> <call><name>Date</name><argument_list>()</argument_list></call> <operator>instanceof</operator> <name>Object</name></expr>;</expr_stmt>
    </unit>

    <!--Unit 47-->
    <unit language="JavaScript">
        <expr_stmt><expr><operator>(</operator><lambda>function<parameter_list>()</parameter_list> <block>{<block_content/>}</block></lambda></expr></expr_stmt>) <expr_stmt><expr><operator>instanceof</operator> <name>Function</name></expr>;</expr_stmt>
    </unit>

    <!--Unit 48-->
    <unit language="JavaScript">
        <expr_stmt><expr><operator>(</operator><lambda>function<parameter_list>()</parameter_list> <block>{<block_content/>}</block></lambda></expr></expr_stmt>) <expr_stmt><expr><operator>instanceof</operator> <name>Object</name></expr>;</expr_stmt>
    </unit>

    <!--Unit 49-->
    <unit language="JavaScript">
        <expr_stmt><expr><operator>(</operator><operator>/</operator><name>regex</name><operator>/</operator><operator>)</operator> <operator>instanceof</operator> <name>RegExp</name></expr>;</expr_stmt>
    </unit>

    <!--Unit 50-->
    <unit language="JavaScript">
        <expr_stmt><expr><operator>(</operator><operator>/</operator><name>regex</name><operator>/</operator><operator>)</operator> <operator>instanceof</operator> <name>Object</name></expr>;</expr_stmt>
    </unit>

    <!--Unit 51-->
    <unit language="JavaScript">
        <expr_stmt><expr><literal type="number">5</literal> <operator>instanceof</operator> <name>Number</name></expr>;</expr_stmt>
    </unit>

    <!--Unit 52-->
    <unit language="JavaScript">
        <expr_stmt><expr><operator>new</operator> <call><name>Number</name><argument_list>(<argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call> <operator>instanceof</operator> <name>Number</name></expr>;</expr_stmt>
    </unit>

    <!--Unit 53-->
    <unit language="JavaScript">
        <comment type="line">// @TODO Nan, Infinity, and undefined are global properties in javascript should they be marked differently</comment>
        <comment type="line">// Comparing NaN</comment>
        <expr_stmt><expr><name>NaN</name> <operator>==</operator> <name>NaN</name></expr>;</expr_stmt>
    </unit>

    <!--Unit 54-->
    <unit language="JavaScript">
        <expr_stmt><expr><name>NaN</name> <operator>===</operator> <name>NaN</name></expr>;</expr_stmt>
    </unit>

    <!--Unit 55-->
    <unit language="JavaScript">
        <expr_stmt><expr><call><name>isNaN</name><argument_list>(<argument><expr><name>NaN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </unit>

    <!--Unit 56-->
    <unit language="JavaScript">
        <comment type="line">// Comparing Infinity</comment>
        <expr_stmt><expr><name>Infinity</name> <operator>&gt;</operator> <literal type="number">1000</literal></expr>;</expr_stmt>
    </unit>

    <!--Unit 57-->
    <unit language="JavaScript">
        <expr_stmt><expr><operator>-</operator><name>Infinity</name> <operator>&lt;</operator> <operator>-</operator><literal type="number">1000</literal></expr>;</expr_stmt>
    </unit>

    <!--Unit 58-->
    <unit language="JavaScript">
        <expr_stmt><expr><name>Infinity</name> <operator>===</operator> <name>Infinity</name></expr>;</expr_stmt>
    </unit>

    <!--Unit 59-->
    <unit language="JavaScript">
        <comment type="line">// Comparing with undefined and null</comment>
        <expr_stmt><expr><name>undefined</name> <operator>&lt;</operator> <literal type="null">null</literal></expr>;</expr_stmt>
    </unit>

    <!--Unit 60-->
    <unit language="JavaScript">
        <expr_stmt><expr><name>undefined</name> <operator>&gt;</operator> <literal type="null">null</literal></expr>;</expr_stmt>
    </unit>

    <!--Unit 61-->
    <unit language="JavaScript">
        <expr_stmt><expr><name>undefined</name> <operator>==</operator> <literal type="null">null</literal></expr>;</expr_stmt>
    </unit>

    <!--Unit 62-->
    <unit language="JavaScript">
        <expr_stmt><expr><name>undefined</name> <operator>===</operator> <literal type="null">null</literal></expr>;</expr_stmt>
    </unit>

    <!--Unit 63-->
    <unit language="JavaScript">
        <comment type="line">// Comparing different types</comment>
        <expr_stmt><expr><literal type="string">'5'</literal> <operator>&gt;</operator> <literal type="number">3</literal></expr>;</expr_stmt>
    </unit>

    <!--Unit 64-->
    <unit language="JavaScript">
        <expr_stmt><expr><literal type="string">'5'</literal> <operator>&lt;</operator> <literal type="number">3</literal></expr>;</expr_stmt>
    </unit>

    <!--Unit 65-->
    <unit language="JavaScript">
        <expr_stmt><expr><literal type="string">'5'</literal> <operator>==</operator> <literal type="number">5</literal></expr>;</expr_stmt>
    </unit>

    <!--Unit 66-->
    <unit language="JavaScript">
        <expr_stmt><expr><literal type="string">'5'</literal> <operator>===</operator> <literal type="number">5</literal></expr>;</expr_stmt>
    </unit>

    <!--Unit 67-->
    <unit language="JavaScript">
        <expr_stmt><expr><literal type="boolean">true</literal> <operator>&gt;</operator> <literal type="boolean">false</literal></expr>;</expr_stmt>
    </unit>

    <!--Unit 68-->
    <unit language="JavaScript">
        <expr_stmt><expr><literal type="boolean">true</literal> <operator>==</operator> <literal type="number">1</literal></expr>;</expr_stmt>
    </unit>

    <!--Unit 69-->
    <unit language="JavaScript">
        <expr_stmt><expr><literal type="boolean">true</literal> <operator>===</operator> <literal type="number">1</literal></expr>;</expr_stmt>
    </unit>

    <!--Unit 70-->
    <unit language="JavaScript">
        <comment type="line">// Comparing Objects</comment>
        <decl_stmt><decl type="const">const <name>obj1</name> <init>= <expr><object>{ <property><name>x</name>: <expr><literal type="number">1</literal></expr></property> }</object></expr></init></decl>;</decl_stmt>
    </unit>

    <!--Unit 71-->
    <unit language="JavaScript">
        <decl_stmt><decl type="const">const <name>obj2</name> <init>= <expr><object>{ <property><name>x</name>: <expr><literal type="number">1</literal></expr></property> }</object></expr></init></decl>;</decl_stmt>
    </unit>

    <!--Unit 72-->
    <unit language="JavaScript">
        <decl_stmt><decl type="const">const <name>obj3</name> <init>= <expr><name>obj1</name></expr></init></decl>;</decl_stmt>
    </unit>

    <!--Unit 73-->
    <unit language="JavaScript">
        <expr_stmt><expr><name>obj1</name> <operator>==</operator> <name>obj2</name></expr>;</expr_stmt>
    </unit>

    <!--Unit 74-->
    <unit language="JavaScript">
        <expr_stmt><expr><name>obj1</name> <operator>===</operator> <name>obj2</name></expr>;</expr_stmt>
    </unit>

    <!--Unit 75-->
    <unit language="JavaScript">
        <expr_stmt><expr><name>obj1</name> <operator>==</operator> <name>obj3</name></expr>;</expr_stmt>
    </unit>

    <!--Unit 76-->
    <unit language="JavaScript">
        <expr_stmt><expr><name>obj1</name> <operator>===</operator> <name>obj3</name></expr>;</expr_stmt>
    </unit>

    <!--Unit 77-->
    <unit language="JavaScript">
        <comment type="line">// Comparing Functions</comment>
        <function>function <name>func1</name><parameter_list>()</parameter_list> <block>{<block_content/>}</block></function>
    </unit>

    <!--Unit 78-->
    <unit language="JavaScript">
        <function>function <name>func2</name><parameter_list>()</parameter_list> <block>{<block_content/>}</block></function>
    </unit>

    <!--Unit 79-->
    <unit language="JavaScript">
        <decl_stmt><decl type="const">const <name>func3</name> <init>= <expr><name>func1</name></expr></init></decl>;</decl_stmt>
    </unit>

    <!--Unit 80-->
    <unit language="JavaScript">
        <expr_stmt><expr><name>func1</name> <operator>==</operator> <name>func2</name></expr>;</expr_stmt>
    </unit>

    <!--Unit 81-->
    <unit language="JavaScript">
        <expr_stmt><expr><name>func1</name> <operator>===</operator> <name>func2</name></expr>;</expr_stmt>
    </unit>

    <!--Unit 82-->
    <unit language="JavaScript">
        <expr_stmt><expr><name>func1</name> <operator>==</operator> <name>func3</name></expr>;</expr_stmt>
    </unit>

    <!--Unit 83-->
    <unit language="JavaScript">
        <expr_stmt><expr><name>func1</name> <operator>===</operator> <name>func3</name></expr>;</expr_stmt>
    </unit>

    <!--Unit 84-->
    <unit language="JavaScript">
        <comment type="line">// Comparing Symbols</comment>
        <decl_stmt><decl type="const">const <name>sym1</name> <init>= <expr><call><name>Symbol</name><argument_list>(<argument><expr><literal type="string">'foo'</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    </unit>

    <!--Unit 85-->
    <unit language="JavaScript">
        <decl_stmt><decl type="const">const <name>sym2</name> <init>= <expr><call><name>Symbol</name><argument_list>(<argument><expr><literal type="string">'foo'</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    </unit>

    <!--Unit 86-->
    <unit language="JavaScript">
        <decl_stmt><decl type="const">const <name>sym3</name> <init>= <expr><name>sym1</name></expr></init></decl>;</decl_stmt>
    </unit>

    <!--Unit 87-->
    <unit language="JavaScript">
        <expr_stmt><expr><name>sym1</name> <operator>==</operator> <name>sym2</name></expr>;</expr_stmt>
    </unit>

    <!--Unit 88-->
    <unit language="JavaScript">
        <expr_stmt><expr><name>sym1</name> <operator>===</operator> <name>sym2</name></expr>;</expr_stmt>
    </unit>

    <!--Unit 89-->
    <unit language="JavaScript">
        <expr_stmt><expr><name>sym1</name> <operator>==</operator> <name>sym3</name></expr>;</expr_stmt>
    </unit>

    <!--Unit 90-->
    <unit language="JavaScript">
        <expr_stmt><expr><name>sym1</name> <operator>===</operator> <name>sym3</name></expr>;</expr_stmt>
    </unit>

</unit>
