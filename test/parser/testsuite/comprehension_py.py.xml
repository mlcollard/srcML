<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" language="Python" url="comprehension">

<unit revision="1.1.0" language="Python">
<expr_stmt><expr><operator>(</operator><name>x</name> <comprehension><for>for <control><name>x</name> <range>in <expr><call><name>range</name><argument_list>(<argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></expr></range></control></for></comprehension><operator>)</operator></expr></expr_stmt>
</unit>

<unit revision="1.1.0" language="Python">
<expr_stmt><expr><operator>(</operator><name>x</name> <comprehension><for><specifier>async</specifier> for <control><name>x</name> <range>in <expr><call><name>async_range</name><argument_list>(<argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></expr></range></control></for></comprehension><operator>)</operator></expr></expr_stmt>
</unit>

<unit revision="1.1.0" language="Python">
<expr_stmt><expr><array>[<expr><name>x</name></expr> <comprehension><for>for <control><name>x</name> <range>in <expr><call><name>range</name><argument_list>(<argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></expr></range></control></for></comprehension>]</array></expr></expr_stmt>
</unit>

<unit revision="1.1.0" language="Python">
<expr_stmt><expr><array>[<expr><name>x</name></expr> <comprehension><for><specifier>async</specifier> for <control><name>x</name> <range>in <expr><call><name>async_range</name><argument_list>(<argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></expr></range></control></for></comprehension>]</array></expr></expr_stmt>
</unit>

<unit revision="1.1.0" language="Python">
<expr_stmt><expr><set>{<expr><name>x</name></expr> <comprehension><for>for <control><name>x</name> <range>in <expr><call><name>range</name><argument_list>(<argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></expr></range></control></for></comprehension>}</set></expr></expr_stmt>
</unit>

<unit revision="1.1.0" language="Python">
<expr_stmt><expr><set>{<expr><name>x</name></expr> <comprehension><for><specifier>async</specifier> for <control><name>x</name> <range>in <expr><call><name>async_range</name><argument_list>(<argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></expr></range></control></for></comprehension>}</set></expr></expr_stmt>
</unit>

<unit revision="1.1.0" language="Python">
<expr_stmt><expr><dictionary>{<expr><name>x</name></expr>:<expr><name>x</name><operator>+</operator><literal type="number">1</literal></expr> <comprehension><for>for <control><name>x</name> <range>in <expr><call><name>range</name><argument_list>(<argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></expr></range></control></for></comprehension>}</dictionary></expr></expr_stmt>
</unit>

<unit revision="1.1.0" language="Python">
<expr_stmt><expr><dictionary>{<expr><name>x</name></expr>:<expr><name>x</name><operator>+</operator><literal type="number">1</literal></expr> <comprehension><for><specifier>async</specifier> for <control><name>x</name> <range>in <expr><call><name>async_range</name><argument_list>(<argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></expr></range></control></for></comprehension>}</dictionary></expr></expr_stmt>
</unit>

<unit revision="1.1.0" language="Python">
<expr_stmt><expr><name>x</name> <operator>=</operator> <array>[<expr><name>x</name></expr> <comprehension><for>for <control><name>x</name> <range>in <expr><call><name>range</name><argument_list>(<argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></expr></range></control></for></comprehension>]</array></expr></expr_stmt>
</unit>

<unit revision="1.1.0" language="Python">
<expr_stmt><expr><array>[<expr><name>val</name> <operator>*</operator> <literal type="number">2</literal></expr> <comprehension><for>for <control><name>val</name> <range>in <expr><name>array</name></expr></range></control></for></comprehension>]</array></expr></expr_stmt>
</unit>

<unit revision="1.1.0" language="Python">
<expr_stmt><expr><array>[<expr><call><name><name>val</name><operator>.</operator><name>example</name></name><argument_list>(<argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>)</argument_list></call> <operator>*</operator> <literal type="number">2</literal></expr> <comprehension><for>for <control><tuple><name>a</name>,<name>b</name></tuple> <range>in <expr><name>array</name></expr></range></control></for></comprehension>]</array></expr></expr_stmt>
</unit>

<unit revision="1.1.0" language="Python">
<expr_stmt><expr><array>[<expr><name>user</name> <operator>+</operator> <literal type="string">' '</literal> <operator>+</operator> <name>status</name></expr> <comprehension><for>for <control><tuple><name>user</name>, <name>status</name></tuple> <range>in <expr><call><name><name>users</name><operator>.</operator><name>items</name></name><argument_list>()</argument_list></call></expr></range></control></for></comprehension>]</array></expr></expr_stmt>
</unit>

<unit revision="1.1.0" language="Python">
<expr_stmt><expr><array>[<expr><name>val</name></expr> <comprehension><for>for <control><name>val</name> <range>in <expr><name>a</name></expr></range></control></for> <if>if <condition><expr><name>val</name> <operator>%</operator> <literal type="number">2</literal> <operator>==</operator> <literal type="number">0</literal></expr></condition></if></comprehension>]</array></expr></expr_stmt>
</unit>

<unit revision="1.1.0" language="Python">
<expr_stmt><expr><array>[<expr><name>val</name></expr> <comprehension><for>for <control><name>val</name> <range>in <expr><name>a</name></expr></range></control></for> <if>if <condition><expr><name>val</name> <operator>%</operator> <literal type="number">2</literal> <operator>==</operator> <literal type="number">0</literal></expr></condition></if> <if>if <condition><expr><name>val</name> <operator>%</operator> <literal type="number">3</literal> <operator>==</operator> <literal type="number">0</literal></expr></condition></if></comprehension>]</array></expr></expr_stmt>
</unit>

<unit revision="1.1.0" language="Python">
<expr_stmt><expr><array>[<expr><name>x</name></expr> <comprehension><for>for <control><name>x</name> <range>in <expr><array>[<expr><name>a</name></expr> <comprehension><for>for <control><name>a</name> <range>in <expr><call><name>range</name><argument_list>(<argument><expr><literal type="number">100</literal></expr></argument>)</argument_list></call></expr></range></control></for> <if>if <condition><expr><name>a</name> <operator>&lt;</operator> <literal type="number">50</literal></expr></condition></if></comprehension>]</array></expr></range></control></for> <if>if <condition><expr><name>x</name> <operator>%</operator> <literal type="number">2</literal> <operator>==</operator> <literal type="number">0</literal></expr></condition></if></comprehension>]</array></expr></expr_stmt>
</unit>

<unit revision="1.1.0" language="Python">
<expr_stmt><expr><name>result</name> <operator>=</operator> <array>[<expr><operator>(</operator><name>val</name> <operator>*</operator> <literal type="number">2</literal> <comprehension><for>for <control><name>val</name> <range>in <expr><name>array</name></expr></range></control></for></comprehension><operator>)</operator></expr>]</array></expr></expr_stmt>
</unit>

<unit revision="1.1.0" language="Python">
<expr_stmt><expr><name>options</name> <operator>=</operator> <operator>(</operator>
    <name>a</name>
    <comprehension><for>for <control><tuple><name>_</name>, <name>a</name>, <name>_</name></tuple> <range>in <expr><call><name>example</name><argument_list>(
        <argument><expr><name>a</name></expr></argument>, <argument><expr><call><name>sample</name><argument_list>(<argument><expr><array>[]</array></expr></argument>)</argument_list></call></expr></argument>
    )</argument_list></call></expr></range></control></for></comprehension>
<operator>)</operator></expr></expr_stmt>
</unit>

<unit revision="1.1.0" language="Python">
<if_stmt><if>if <condition><expr><literal type="boolean">True</literal></expr></condition><block>:<block_content>
    <expr_stmt><expr><call><name>next</name><argument_list>(<argument><expr><name>a</name></expr> <comprehension><for>for <control><name>a</name> <range>in <expr><name>b</name></expr></range></control></for> <if>if <condition><expr><literal type="boolean">True</literal></expr></condition></if></comprehension></argument>)</argument_list></call></expr></expr_stmt>
</block_content></block></if></if_stmt>
</unit>

<unit revision="1.1.0" language="Python">
<if_stmt><if>if <condition><expr><literal type="boolean">True</literal></expr></condition><block>:<block_content>
    <expr_stmt><expr><call><name>next</name><argument_list>(<argument><expr><name>a</name></expr> <comprehension><for>for <control><name>a</name> <range>in <expr><name>b</name></expr></range></control></for> <if>if <condition><expr><literal type="boolean">True</literal></expr></condition></if> <if>if <condition><expr><literal type="boolean">True</literal></expr></condition></if></comprehension></argument>)</argument_list></call></expr></expr_stmt>
</block_content></block></if></if_stmt>
</unit>

<unit revision="1.1.0" language="Python">
<expr_stmt><expr><name>example</name> <operator>=</operator> <array>[<expr><name>a</name></expr> <comprehension><for>for <control><name>b</name> <range>in <expr><call><name>enumerate</name><argument_list>(<argument><expr><call><name>zip</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></range></control></for></comprehension>]</array></expr></expr_stmt>
</unit>

<unit revision="1.1.0" language="Python">
<expr_stmt><expr><name>example</name> <operator>=</operator> <array>[<expr><name>a</name></expr> <comprehension><for>for <control>(<name>b</name>) <range>in <expr><call><name>enumerate</name><argument_list>(<argument><expr><call><name>zip</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></range></control></for></comprehension>]</array></expr></expr_stmt>
</unit>

<unit revision="1.1.0" language="Python">
<expr_stmt><expr><name>example</name> <operator>=</operator> <array>[<expr><name>a</name></expr> <comprehension><for>for <control>(((<name>b</name>))) <range>in <expr><call><name>enumerate</name><argument_list>(<argument><expr><call><name>zip</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>d</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></range></control></for></comprehension>]</array></expr></expr_stmt>
</unit>

<unit revision="1.1.0" language="Python">
<expr_stmt><expr><name>example</name> <operator>=</operator> <array>[<expr><name>a</name></expr> <comprehension><for>for <control><tuple><name>b</name>, <name>c</name></tuple> <range>in <expr><call><name>enumerate</name><argument_list>(<argument><expr><call><name>zip</name><argument_list>(<argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></range></control></for></comprehension>]</array></expr></expr_stmt>
</unit>

<unit revision="1.1.0" language="Python">
<expr_stmt><expr><name>example</name> <operator>=</operator> <array>[<expr><name>a</name></expr> <comprehension><for>for <control><tuple>(<name>b</name>, <name>c</name>)</tuple> <range>in <expr><call><name>enumerate</name><argument_list>(<argument><expr><call><name>zip</name><argument_list>(<argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></range></control></for></comprehension>]</array></expr></expr_stmt>
</unit>

<unit revision="1.1.0" language="Python">
<expr_stmt><expr><name>example</name> <operator>=</operator> <array>[<expr><name>a</name></expr> <comprehension><for>for <control><tuple>(((<name>b</name>)), ((<name>c</name>)))</tuple> <range>in <expr><call><name>enumerate</name><argument_list>(<argument><expr><call><name>zip</name><argument_list>(<argument><expr><name>d</name></expr></argument>, <argument><expr><name>e</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></range></control></for></comprehension>]</array></expr></expr_stmt>
</unit>

<unit revision="1.1.0" language="Python">
<expr_stmt><expr><name>example</name> <operator>=</operator> <array>[<expr><name>a</name></expr> <comprehension><for>for <control><tuple>((<tuple>(<name>b</name>, <name>c</name>)</tuple>), <name>d</name>)</tuple> <range>in <expr><call><name>enumerate</name><argument_list>(<argument><expr><call><name>zip</name><argument_list>(<argument><expr><name>e</name></expr></argument>, <argument><expr><name>f</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></range></control></for></comprehension>]</array></expr></expr_stmt>
</unit>

<unit revision="1.1.0" language="Python">
<expr_stmt><expr><name>example</name> <operator>=</operator> <array>[<expr><name>a</name></expr> <comprehension><for>for <control><tuple><name>b</name>, <tuple>(<name>c</name>, <tuple>(<name>d</name>, <name>e</name>)</tuple>)</tuple></tuple> <range>in <expr><call><name>enumerate</name><argument_list>(<argument><expr><call><name>zip</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></range></control></for></comprehension>]</array></expr></expr_stmt>
</unit>

<unit revision="1.1.0" language="Python">
<expr_stmt><expr><name>example</name> <operator>=</operator> <array>[<expr><name>a</name></expr> <comprehension><for>for <control><tuple>(<name>b</name>), <tuple>((<name>c</name>), <tuple>((<name>d</name>), (<name>e</name>))</tuple>)</tuple></tuple> <range>in <expr><call><name>enumerate</name><argument_list>(<argument><expr><call><name>zip</name><argument_list>(<argument><expr><name>f</name></expr></argument>, <argument><expr><name>g</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></range></control></for></comprehension>]</array></expr></expr_stmt>
</unit>

<unit revision="1.1.0" language="Python">
<expr_stmt><expr><name>result</name> <operator>=</operator> <array>[<expr><name>a</name></expr> <comprehension><for>for <control><array>[<name>b</name>]</array> <range>in <expr><call><name>enumerate</name><argument_list>(<argument><expr><name>c</name></expr></argument>)</argument_list></call></expr></range></control></for></comprehension>]</array></expr></expr_stmt>
</unit>

<unit revision="1.1.0" language="Python">
<expr_stmt><expr><name>result</name> <operator>=</operator> <array>[<expr><name>a</name></expr> <comprehension><for>for <control><array>[<name>b</name>, <name>c</name>]</array> <range>in <expr><call><name>enumerate</name><argument_list>(<argument><expr><name>d</name></expr></argument>)</argument_list></call></expr></range></control></for></comprehension>]</array></expr></expr_stmt>
</unit>

<unit revision="1.1.0" language="Python">
<expr_stmt><expr><name>result</name> <operator>=</operator> <array>[<expr><name>a</name></expr> <comprehension><for>for <control><array>[(<name>b</name>)]</array> <range>in <expr><call><name>enumerate</name><argument_list>(<argument><expr><name>c</name></expr></argument>)</argument_list></call></expr></range></control></for></comprehension>]</array></expr></expr_stmt>
</unit>

<unit revision="1.1.0" language="Python">
<expr_stmt><expr><name>result</name> <operator>=</operator> <array>[<expr><name>a</name></expr> <comprehension><for>for <control><array>[(<name>b</name>), (<name>c</name>)]</array> <range>in <expr><call><name>enumerate</name><argument_list>(<argument><expr><name>d</name></expr></argument>)</argument_list></call></expr></range></control></for></comprehension>]</array></expr></expr_stmt>
</unit>

<unit revision="1.1.0" language="Python">
<expr_stmt><expr><name>result</name> <operator>=</operator> <array>[<expr><name>a</name></expr> <comprehension><for>for <control>(<array>[<name>b</name>, <name>c</name>]</array>) <range>in <expr><call><name>enumerate</name><argument_list>(<argument><expr><name>d</name></expr></argument>)</argument_list></call></expr></range></control></for></comprehension>]</array></expr></expr_stmt>
</unit>

<unit revision="1.1.0" language="Python">
<expr_stmt><expr><name>result</name> <operator>=</operator> <array>[<expr><name>a</name></expr> <comprehension><for>for <control><array>[<tuple>(<name>b</name>, <name>c</name>)</tuple>, <tuple>(<name>d</name>, <name>e</name>)</tuple>]</array> <range>in <expr><call><name>enumerate</name><argument_list>(<argument><expr><name>f</name></expr></argument>)</argument_list></call></expr></range></control></for></comprehension>]</array></expr></expr_stmt>
</unit>

<unit revision="1.1.0" language="Python">
<expr_stmt><expr><name>result</name> <operator>=</operator> <array>[<expr><name>a</name></expr> <comprehension><for>for <control>(<array>[<tuple>(<name>b</name>, <name>c</name>)</tuple>, <tuple>(<name>d</name>, <name>e</name>)</tuple>]</array>) <range>in <expr><call><name>enumerate</name><argument_list>(<argument><expr><name>f</name></expr></argument>)</argument_list></call></expr></range></control></for></comprehension>]</array></expr></expr_stmt>
</unit>

<unit revision="1.1.0" language="Python">
<expr_stmt><expr><name>result</name> <operator>=</operator> <array>[<expr><name>a</name></expr> <comprehension><for>for <control><array>[<array>[<name>b</name>, <name>c</name>]</array>, <array>[<name>d</name>, <name>e</name>]</array>]</array> <range>in <expr><call><name>enumerate</name><argument_list>(<argument><expr><name>f</name></expr></argument>)</argument_list></call></expr></range></control></for></comprehension>]</array></expr></expr_stmt>
</unit>

<unit revision="1.1.0" language="Python">
<expr_stmt><expr><name>result</name> <operator>=</operator> <array>[<expr><name>a</name></expr> <comprehension><for>for <control><tuple>(<array>[<array>[<name>b</name>, <name>c</name>]</array>, <array>[<name>d</name>, <name>e</name>]</array>]</array>, <array>[<array>[<name>f</name>, <name>g</name>]</array>, <array>[<name>h</name>, <name>i</name>]</array>]</array>)</tuple> <range>in <expr><call><name>enumerate</name><argument_list>(<argument><expr><name>j</name></expr></argument>)</argument_list></call></expr></range></control></for></comprehension>]</array></expr></expr_stmt>
</unit>

<unit revision="1.1.0" language="Python">
<expr_stmt><expr><name>types</name> <operator>=</operator> <set>{ <expr><call><name>type</name><argument_list>(<argument><expr><name>a</name></expr></argument>)</argument_list></call></expr> <comprehension><for>for <control><name><operator>*</operator><name>_</name></name> <range>in <expr><name>a</name></expr></range></control></for></comprehension> }</set></expr></expr_stmt>
</unit>

<unit revision="1.1.0" language="Python">
<expr_stmt><expr><name>types</name> <operator>=</operator> <set>{ <expr><call><name>type</name><argument_list>(<argument><expr><name>a</name></expr></argument>)</argument_list></call></expr> <comprehension><for>for <control>(<name><operator>*</operator><name>_</name></name>) <range>in <expr><name>a</name></expr></range></control></for></comprehension> }</set></expr></expr_stmt>
</unit>

<unit revision="1.1.0" language="Python">
<expr_stmt><expr><name>types</name> <operator>=</operator> <set>{ <expr><call><name>type</name><argument_list>(<argument><expr><name>a</name></expr></argument>)</argument_list></call></expr> <comprehension><for>for <control><tuple><name>a</name>, <name><operator>*</operator><name>_</name></name></tuple> <range>in <expr><name>b</name></expr></range></control></for></comprehension> }</set></expr></expr_stmt>
</unit>

<unit revision="1.1.0" language="Python">
<expr_stmt><expr><name>types</name> <operator>=</operator> <set>{ <expr><call><name>type</name><argument_list>(<argument><expr><name>a</name></expr></argument>)</argument_list></call></expr> <comprehension><for>for <control><tuple>(<name><operator>*</operator><name>_</name></name>, <name>a</name>)</tuple> <range>in <expr><name>b</name></expr></range></control></for></comprehension> }</set></expr></expr_stmt>
</unit>

<unit revision="1.1.0" language="Python">
<expr_stmt><expr><name>types</name> <operator>=</operator> <set>{ <expr><call><name>type</name><argument_list>(<argument><expr><name>a</name></expr></argument>)</argument_list></call></expr> <comprehension><for>for <control><array>[<name><operator>*</operator><name>_</name></name>, <name>a</name>]</array> <range>in <expr><name>b</name></expr></range></control></for></comprehension> }</set></expr></expr_stmt>
</unit>

</unit>
