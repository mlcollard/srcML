<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Python" url="class">

<unit revision="1.0.0" language="Python">
<class>class <name>Car</name><block>:<block_content>
    <pass>pass</pass>
</block_content></block></class>
</unit>

<unit revision="1.0.0" language="Python">
<class>class <name>Truck</name><block>:<block_content>
    <function>def <name>__init__</name><parameter_list>(<parameter><name>self</name></parameter>)</parameter_list><block>:<block_content>
        <pass>pass</pass>
</block_content></block></function></block_content></block></class>
</unit>

<unit revision="1.0.0" language="Python">
<class>class <name>Nothing</name><super_list>()</super_list><block>:<block_content>
    <pass>pass</pass>
</block_content></block></class>
</unit>

<unit revision="1.0.0" language="Python">
<class>class <name>EV</name><super_list>(<super><expr><name>Car</name></expr></super>)</super_list><block>:<block_content>
    <pass>pass</pass>
</block_content></block></class>
</unit>

<unit revision="1.0.0" language="Python">
<class>class <name>ETruck</name><super_list>(<super><expr><name>EV</name></expr></super>, <super><expr><name>Truck</name></expr></super>)</super_list><block>:<block_content>
    <pass>pass</pass>
</block_content></block></class>
</unit>

<unit revision="1.0.0" language="Python">
<class>class <name>Example</name><super_list>(<super><expr><name>a</name></expr></super>, <super><expr><name>b</name></expr></super>, <super><expr><name>metaclass</name><operator>=</operator><name>Sample</name></expr></super>)</super_list><block>:<block_content>
    <pass>pass</pass>
</block_content></block></class>
</unit>

<unit revision="1.0.0" language="Python">
<class>class <name>Example</name><super_list>(
    <super><expr><call><name>namedtuple</name><argument_list>(
        <argument><expr><literal type="string">"Example"</literal></expr></argument>, <argument><expr><tuple>(<expr><literal type="string">"a"</literal></expr>, <expr><literal type="string">"b"</literal></expr>, <expr><literal type="string">"c"</literal></expr>)</tuple></expr></argument>
    )</argument_list></call></expr></super>
)</super_list><block>:<block_content>
    <pass>pass</pass>
</block_content></block></class>
</unit>

<unit revision="1.0.0" language="Python">
<class>class <name>Box</name><super_list>(<super><expr><name><name>Generic</name><index>[<expr><name>T</name></expr>]</index></name></expr></super>)</super_list><block>:<block_content>
    <pass>pass</pass>
</block_content></block></class>
</unit>

<unit revision="1.0.0" language="Python">
<class>class <name>Box</name><super_list>(<super><expr><name><name>Generic</name><index>[<expr><name>T</name></expr>]</index></name></expr></super>, <super><expr><name><name>Generic</name><index>[<expr><name>T</name></expr>]</index></name></expr></super>)</super_list><block>:<block_content>
    <pass>pass</pass>
</block_content></block></class>
</unit>

<unit revision="1.0.0" language="Python">
<class><attribute>@<expr><name>unique</name></expr></attribute>
class <name>License</name><block>:<block_content>
    <pass>pass</pass>
</block_content></block></class>
</unit>

<unit revision="1.0.0" language="Python">
<class><attribute>@<expr><name>Operator</name></expr></attribute>
<attribute>@<expr><call><name>GetType</name><argument_list>()</argument_list></call></expr></attribute>
class <name>new_op</name><block>:<block_content>
    <pass>pass</pass>
</block_content></block></class>
</unit>

<unit revision="1.0.0" language="Python">
<class><attribute>@<expr><name>unique</name></expr></attribute>
<attribute>@<expr><call><name>GetType</name><argument_list>()</argument_list></call></expr></attribute>
class <name>All</name><super_list>(<super><expr><name>Nothing</name></expr></super>,<super><expr><name>new_op</name></expr></super>,<super><expr><call><name>GetParent</name><argument_list>()</argument_list></call></expr></super>)</super_list><block>:<block_content>
    <pass>pass</pass>
</block_content></block></class>
</unit>

<unit revision="1.0.0" language="Python">
<class>class <name><name>list</name><parameter_list type="generic">[<parameter><name>T</name></parameter>]</parameter_list></name><block>:<block_content>
    <pass>pass</pass>
</block_content></block></class>
</unit>

<unit revision="1.0.0" language="Python">
<class>class <name><name>Box</name><parameter_list type="generic">[<parameter><name>T</name></parameter>]</parameter_list></name><super_list>(<super><expr><name><name>Generic</name><index>[<expr><name>T</name></expr>]</index></name></expr></super>)</super_list><block>:<block_content>
    <pass>pass</pass>
</block_content></block></class>
</unit>

<unit revision="1.0.0" language="Python">
<class>class <name>Player</name><block>:<block_content> <expr_stmt><expr><name>speed</name> <operator>=</operator> <literal type="number">10</literal></expr></expr_stmt></block_content></block></class>
</unit>

<unit revision="1.0.0" language="Python">
<class>class <name>Player</name><block>:<block_content> <expr_stmt><expr><name>a</name> <operator>=</operator> <literal type="number">10</literal></expr>;</expr_stmt> <expr_stmt><expr><name>b</name> <operator>=</operator> <literal type="number">20</literal></expr></expr_stmt></block_content></block></class>
</unit>

<unit revision="1.0.0" language="Python">
<class>class <name>Player</name><block>:<block_content>
    <function>def <name>run</name><parameter_list>(<parameter><name>self</name></parameter>)</parameter_list><block>:<block_content> <return>return <expr><literal type="number">10</literal></expr></return></block_content></block></function>
</block_content></block></class>
</unit>

<unit revision="1.0.0" language="Python">
<class>class <name>Player</name><block>:<block_content>
    <function>def <name>run</name><parameter_list>(<parameter><name>self</name></parameter>)</parameter_list><block>:<block_content> <pass>pass</pass></block_content></block></function>

    <pass>pass</pass>
</block_content></block></class>
</unit>

</unit>
